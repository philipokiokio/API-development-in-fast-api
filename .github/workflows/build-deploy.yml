name: Build and Deploy Code

on: [push,pull_request]

jobs: 
  build: 
    environment:
      name: testing

    env:
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_MINUTES: ${{secrets.ACCESS_TOKEN_MINUTES}}
    services:
      postgres:
        image: postgres 
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB : ${{secrets.DATABASE_NAME}}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v3
      - name: Python installation on our machine
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"
      - name: Update Pip
        run: python -m pip install --upgrade pip
      - name: Install all dependencies from Requirements.txt
        run: pip install -r requirements.txt 
      - name: Test with pytest
        run: |
          pip install pytest
          pytest -v -s
      
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{secrets.DOCKER_HUB_USERNAME}}
      #     password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}
      
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v1
      
      # - name: Build and push
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./
      #     file: ./Dockerfile
      #     builder: ${{ steps.buildx.outputs.name }}
      #     push: true
      #     tags: ${{ secrets.DOCKER_HUB_USERNAME }}/kaizzen-fastapi:latest
      #     cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/kaizzen-fastapi:buildcache
      #     cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/kaizzen-fastapi:buildcache,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: production

    steps:
      - name: pulling git repo
        uses: actions/checkout@v3
      
      - name: deploying to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL}} 

  

      
